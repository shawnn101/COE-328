// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "11/24/2024 15:51:27"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ASU (
	Add_Sub,
	X,
	Y,
	S,
	Cout,
	Overflow,
	Sign);
input 	Add_Sub;
input 	[3:0] X;
input 	[3:0] Y;
output 	[3:0] S;
output 	Cout;
output 	Overflow;
output 	Sign;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Add_Sub~combout ;
wire \Add0~1_cout ;
wire \Add0~2_combout ;
wire \Add0~3 ;
wire \Add0~4_combout ;
wire \Add0~5 ;
wire \Add0~6_combout ;
wire \Add0~7 ;
wire \Add0~8_combout ;
wire \Add0~9 ;
wire \Add0~10_combout ;
wire \Overflow~2_combout ;
wire [3:0] \Y~combout ;
wire [3:0] \X~combout ;
wire [3:0] Y_mod;


cycloneii_io \X[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\X~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(X[0]));
// synopsys translate_off
defparam \X[0]~I .input_async_reset = "none";
defparam \X[0]~I .input_power_up = "low";
defparam \X[0]~I .input_register_mode = "none";
defparam \X[0]~I .input_sync_reset = "none";
defparam \X[0]~I .oe_async_reset = "none";
defparam \X[0]~I .oe_power_up = "low";
defparam \X[0]~I .oe_register_mode = "none";
defparam \X[0]~I .oe_sync_reset = "none";
defparam \X[0]~I .operation_mode = "input";
defparam \X[0]~I .output_async_reset = "none";
defparam \X[0]~I .output_power_up = "low";
defparam \X[0]~I .output_register_mode = "none";
defparam \X[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Add_Sub~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Add_Sub~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Add_Sub));
// synopsys translate_off
defparam \Add_Sub~I .input_async_reset = "none";
defparam \Add_Sub~I .input_power_up = "low";
defparam \Add_Sub~I .input_register_mode = "none";
defparam \Add_Sub~I .input_sync_reset = "none";
defparam \Add_Sub~I .oe_async_reset = "none";
defparam \Add_Sub~I .oe_power_up = "low";
defparam \Add_Sub~I .oe_register_mode = "none";
defparam \Add_Sub~I .oe_sync_reset = "none";
defparam \Add_Sub~I .operation_mode = "input";
defparam \Add_Sub~I .output_async_reset = "none";
defparam \Add_Sub~I .output_power_up = "low";
defparam \Add_Sub~I .output_register_mode = "none";
defparam \Add_Sub~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Y[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Y~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Y[0]));
// synopsys translate_off
defparam \Y[0]~I .input_async_reset = "none";
defparam \Y[0]~I .input_power_up = "low";
defparam \Y[0]~I .input_register_mode = "none";
defparam \Y[0]~I .input_sync_reset = "none";
defparam \Y[0]~I .oe_async_reset = "none";
defparam \Y[0]~I .oe_power_up = "low";
defparam \Y[0]~I .oe_register_mode = "none";
defparam \Y[0]~I .oe_sync_reset = "none";
defparam \Y[0]~I .operation_mode = "input";
defparam \Y[0]~I .output_async_reset = "none";
defparam \Y[0]~I .output_power_up = "low";
defparam \Y[0]~I .output_register_mode = "none";
defparam \Y[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Y_mod[0] (
// Equation(s):
// Y_mod[0] = \Add_Sub~combout  $ (\Y~combout [0])

	.dataa(vcc),
	.datab(vcc),
	.datac(\Add_Sub~combout ),
	.datad(\Y~combout [0]),
	.cin(gnd),
	.combout(Y_mod[0]),
	.cout());
// synopsys translate_off
defparam \Y_mod[0] .lut_mask = 16'h0FF0;
defparam \Y_mod[0] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Add0~1 (
// Equation(s):
// \Add0~1_cout  = CARRY(\Add_Sub~combout )

	.dataa(\Add_Sub~combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(),
	.cout(\Add0~1_cout ));
// synopsys translate_off
defparam \Add0~1 .lut_mask = 16'h00AA;
defparam \Add0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Add0~2 (
// Equation(s):
// \Add0~2_combout  = (\X~combout [0] & ((Y_mod[0] & (\Add0~1_cout  & VCC)) # (!Y_mod[0] & (!\Add0~1_cout )))) # (!\X~combout [0] & ((Y_mod[0] & (!\Add0~1_cout )) # (!Y_mod[0] & ((\Add0~1_cout ) # (GND)))))
// \Add0~3  = CARRY((\X~combout [0] & (!Y_mod[0] & !\Add0~1_cout )) # (!\X~combout [0] & ((!\Add0~1_cout ) # (!Y_mod[0]))))

	.dataa(\X~combout [0]),
	.datab(Y_mod[0]),
	.datac(vcc),
	.datad(vcc),
	.cin(\Add0~1_cout ),
	.combout(\Add0~2_combout ),
	.cout(\Add0~3 ));
// synopsys translate_off
defparam \Add0~2 .lut_mask = 16'h9617;
defparam \Add0~2 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_io \X[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\X~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(X[1]));
// synopsys translate_off
defparam \X[1]~I .input_async_reset = "none";
defparam \X[1]~I .input_power_up = "low";
defparam \X[1]~I .input_register_mode = "none";
defparam \X[1]~I .input_sync_reset = "none";
defparam \X[1]~I .oe_async_reset = "none";
defparam \X[1]~I .oe_power_up = "low";
defparam \X[1]~I .oe_register_mode = "none";
defparam \X[1]~I .oe_sync_reset = "none";
defparam \X[1]~I .operation_mode = "input";
defparam \X[1]~I .output_async_reset = "none";
defparam \X[1]~I .output_power_up = "low";
defparam \X[1]~I .output_register_mode = "none";
defparam \X[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Y[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Y~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Y[1]));
// synopsys translate_off
defparam \Y[1]~I .input_async_reset = "none";
defparam \Y[1]~I .input_power_up = "low";
defparam \Y[1]~I .input_register_mode = "none";
defparam \Y[1]~I .input_sync_reset = "none";
defparam \Y[1]~I .oe_async_reset = "none";
defparam \Y[1]~I .oe_power_up = "low";
defparam \Y[1]~I .oe_register_mode = "none";
defparam \Y[1]~I .oe_sync_reset = "none";
defparam \Y[1]~I .operation_mode = "input";
defparam \Y[1]~I .output_async_reset = "none";
defparam \Y[1]~I .output_power_up = "low";
defparam \Y[1]~I .output_register_mode = "none";
defparam \Y[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Y_mod[1] (
// Equation(s):
// Y_mod[1] = \Add_Sub~combout  $ (\Y~combout [1])

	.dataa(vcc),
	.datab(vcc),
	.datac(\Add_Sub~combout ),
	.datad(\Y~combout [1]),
	.cin(gnd),
	.combout(Y_mod[1]),
	.cout());
// synopsys translate_off
defparam \Y_mod[1] .lut_mask = 16'h0FF0;
defparam \Y_mod[1] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Add0~4 (
// Equation(s):
// \Add0~4_combout  = ((\X~combout [1] $ (Y_mod[1] $ (!\Add0~3 )))) # (GND)
// \Add0~5  = CARRY((\X~combout [1] & ((Y_mod[1]) # (!\Add0~3 ))) # (!\X~combout [1] & (Y_mod[1] & !\Add0~3 )))

	.dataa(\X~combout [1]),
	.datab(Y_mod[1]),
	.datac(vcc),
	.datad(vcc),
	.cin(\Add0~3 ),
	.combout(\Add0~4_combout ),
	.cout(\Add0~5 ));
// synopsys translate_off
defparam \Add0~4 .lut_mask = 16'h698E;
defparam \Add0~4 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_io \X[2]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\X~combout [2]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(X[2]));
// synopsys translate_off
defparam \X[2]~I .input_async_reset = "none";
defparam \X[2]~I .input_power_up = "low";
defparam \X[2]~I .input_register_mode = "none";
defparam \X[2]~I .input_sync_reset = "none";
defparam \X[2]~I .oe_async_reset = "none";
defparam \X[2]~I .oe_power_up = "low";
defparam \X[2]~I .oe_register_mode = "none";
defparam \X[2]~I .oe_sync_reset = "none";
defparam \X[2]~I .operation_mode = "input";
defparam \X[2]~I .output_async_reset = "none";
defparam \X[2]~I .output_power_up = "low";
defparam \X[2]~I .output_register_mode = "none";
defparam \X[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Y[2]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Y~combout [2]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Y[2]));
// synopsys translate_off
defparam \Y[2]~I .input_async_reset = "none";
defparam \Y[2]~I .input_power_up = "low";
defparam \Y[2]~I .input_register_mode = "none";
defparam \Y[2]~I .input_sync_reset = "none";
defparam \Y[2]~I .oe_async_reset = "none";
defparam \Y[2]~I .oe_power_up = "low";
defparam \Y[2]~I .oe_register_mode = "none";
defparam \Y[2]~I .oe_sync_reset = "none";
defparam \Y[2]~I .operation_mode = "input";
defparam \Y[2]~I .output_async_reset = "none";
defparam \Y[2]~I .output_power_up = "low";
defparam \Y[2]~I .output_register_mode = "none";
defparam \Y[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Y_mod[2] (
// Equation(s):
// Y_mod[2] = \Add_Sub~combout  $ (\Y~combout [2])

	.dataa(vcc),
	.datab(vcc),
	.datac(\Add_Sub~combout ),
	.datad(\Y~combout [2]),
	.cin(gnd),
	.combout(Y_mod[2]),
	.cout());
// synopsys translate_off
defparam \Y_mod[2] .lut_mask = 16'h0FF0;
defparam \Y_mod[2] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Add0~6 (
// Equation(s):
// \Add0~6_combout  = (\X~combout [2] & ((Y_mod[2] & (\Add0~5  & VCC)) # (!Y_mod[2] & (!\Add0~5 )))) # (!\X~combout [2] & ((Y_mod[2] & (!\Add0~5 )) # (!Y_mod[2] & ((\Add0~5 ) # (GND)))))
// \Add0~7  = CARRY((\X~combout [2] & (!Y_mod[2] & !\Add0~5 )) # (!\X~combout [2] & ((!\Add0~5 ) # (!Y_mod[2]))))

	.dataa(\X~combout [2]),
	.datab(Y_mod[2]),
	.datac(vcc),
	.datad(vcc),
	.cin(\Add0~5 ),
	.combout(\Add0~6_combout ),
	.cout(\Add0~7 ));
// synopsys translate_off
defparam \Add0~6 .lut_mask = 16'h9617;
defparam \Add0~6 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_io \X[3]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\X~combout [3]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(X[3]));
// synopsys translate_off
defparam \X[3]~I .input_async_reset = "none";
defparam \X[3]~I .input_power_up = "low";
defparam \X[3]~I .input_register_mode = "none";
defparam \X[3]~I .input_sync_reset = "none";
defparam \X[3]~I .oe_async_reset = "none";
defparam \X[3]~I .oe_power_up = "low";
defparam \X[3]~I .oe_register_mode = "none";
defparam \X[3]~I .oe_sync_reset = "none";
defparam \X[3]~I .operation_mode = "input";
defparam \X[3]~I .output_async_reset = "none";
defparam \X[3]~I .output_power_up = "low";
defparam \X[3]~I .output_register_mode = "none";
defparam \X[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Y[3]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Y~combout [3]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Y[3]));
// synopsys translate_off
defparam \Y[3]~I .input_async_reset = "none";
defparam \Y[3]~I .input_power_up = "low";
defparam \Y[3]~I .input_register_mode = "none";
defparam \Y[3]~I .input_sync_reset = "none";
defparam \Y[3]~I .oe_async_reset = "none";
defparam \Y[3]~I .oe_power_up = "low";
defparam \Y[3]~I .oe_register_mode = "none";
defparam \Y[3]~I .oe_sync_reset = "none";
defparam \Y[3]~I .operation_mode = "input";
defparam \Y[3]~I .output_async_reset = "none";
defparam \Y[3]~I .output_power_up = "low";
defparam \Y[3]~I .output_register_mode = "none";
defparam \Y[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \Y_mod[3] (
// Equation(s):
// Y_mod[3] = \Add_Sub~combout  $ (\Y~combout [3])

	.dataa(vcc),
	.datab(vcc),
	.datac(\Add_Sub~combout ),
	.datad(\Y~combout [3]),
	.cin(gnd),
	.combout(Y_mod[3]),
	.cout());
// synopsys translate_off
defparam \Y_mod[3] .lut_mask = 16'h0FF0;
defparam \Y_mod[3] .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Add0~8 (
// Equation(s):
// \Add0~8_combout  = ((\X~combout [3] $ (Y_mod[3] $ (!\Add0~7 )))) # (GND)
// \Add0~9  = CARRY((\X~combout [3] & ((Y_mod[3]) # (!\Add0~7 ))) # (!\X~combout [3] & (Y_mod[3] & !\Add0~7 )))

	.dataa(\X~combout [3]),
	.datab(Y_mod[3]),
	.datac(vcc),
	.datad(vcc),
	.cin(\Add0~7 ),
	.combout(\Add0~8_combout ),
	.cout(\Add0~9 ));
// synopsys translate_off
defparam \Add0~8 .lut_mask = 16'h698E;
defparam \Add0~8 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_lcell_comb \Add0~10 (
// Equation(s):
// \Add0~10_combout  = \Add0~9 

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(\Add0~9 ),
	.combout(\Add0~10_combout ),
	.cout());
// synopsys translate_off
defparam \Add0~10 .lut_mask = 16'hF0F0;
defparam \Add0~10 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneii_lcell_comb \Overflow~2 (
// Equation(s):
// \Overflow~2_combout  = (\X~combout [3] & ((\Add_Sub~combout  $ (\Y~combout [3])) # (!\Add0~8_combout ))) # (!\X~combout [3] & ((\Add0~8_combout ) # (\Add_Sub~combout  $ (!\Y~combout [3]))))

	.dataa(\Add_Sub~combout ),
	.datab(\Y~combout [3]),
	.datac(\X~combout [3]),
	.datad(\Add0~8_combout ),
	.cin(gnd),
	.combout(\Overflow~2_combout ),
	.cout());
// synopsys translate_off
defparam \Overflow~2 .lut_mask = 16'h6FF9;
defparam \Overflow~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \S[0]~I (
	.datain(\Add0~2_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[0]));
// synopsys translate_off
defparam \S[0]~I .input_async_reset = "none";
defparam \S[0]~I .input_power_up = "low";
defparam \S[0]~I .input_register_mode = "none";
defparam \S[0]~I .input_sync_reset = "none";
defparam \S[0]~I .oe_async_reset = "none";
defparam \S[0]~I .oe_power_up = "low";
defparam \S[0]~I .oe_register_mode = "none";
defparam \S[0]~I .oe_sync_reset = "none";
defparam \S[0]~I .operation_mode = "output";
defparam \S[0]~I .output_async_reset = "none";
defparam \S[0]~I .output_power_up = "low";
defparam \S[0]~I .output_register_mode = "none";
defparam \S[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \S[1]~I (
	.datain(\Add0~4_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[1]));
// synopsys translate_off
defparam \S[1]~I .input_async_reset = "none";
defparam \S[1]~I .input_power_up = "low";
defparam \S[1]~I .input_register_mode = "none";
defparam \S[1]~I .input_sync_reset = "none";
defparam \S[1]~I .oe_async_reset = "none";
defparam \S[1]~I .oe_power_up = "low";
defparam \S[1]~I .oe_register_mode = "none";
defparam \S[1]~I .oe_sync_reset = "none";
defparam \S[1]~I .operation_mode = "output";
defparam \S[1]~I .output_async_reset = "none";
defparam \S[1]~I .output_power_up = "low";
defparam \S[1]~I .output_register_mode = "none";
defparam \S[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \S[2]~I (
	.datain(\Add0~6_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[2]));
// synopsys translate_off
defparam \S[2]~I .input_async_reset = "none";
defparam \S[2]~I .input_power_up = "low";
defparam \S[2]~I .input_register_mode = "none";
defparam \S[2]~I .input_sync_reset = "none";
defparam \S[2]~I .oe_async_reset = "none";
defparam \S[2]~I .oe_power_up = "low";
defparam \S[2]~I .oe_register_mode = "none";
defparam \S[2]~I .oe_sync_reset = "none";
defparam \S[2]~I .operation_mode = "output";
defparam \S[2]~I .output_async_reset = "none";
defparam \S[2]~I .output_power_up = "low";
defparam \S[2]~I .output_register_mode = "none";
defparam \S[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \S[3]~I (
	.datain(\Add0~8_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[3]));
// synopsys translate_off
defparam \S[3]~I .input_async_reset = "none";
defparam \S[3]~I .input_power_up = "low";
defparam \S[3]~I .input_register_mode = "none";
defparam \S[3]~I .input_sync_reset = "none";
defparam \S[3]~I .oe_async_reset = "none";
defparam \S[3]~I .oe_power_up = "low";
defparam \S[3]~I .oe_register_mode = "none";
defparam \S[3]~I .oe_sync_reset = "none";
defparam \S[3]~I .operation_mode = "output";
defparam \S[3]~I .output_async_reset = "none";
defparam \S[3]~I .output_power_up = "low";
defparam \S[3]~I .output_register_mode = "none";
defparam \S[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Cout~I (
	.datain(\Add0~10_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Cout));
// synopsys translate_off
defparam \Cout~I .input_async_reset = "none";
defparam \Cout~I .input_power_up = "low";
defparam \Cout~I .input_register_mode = "none";
defparam \Cout~I .input_sync_reset = "none";
defparam \Cout~I .oe_async_reset = "none";
defparam \Cout~I .oe_power_up = "low";
defparam \Cout~I .oe_register_mode = "none";
defparam \Cout~I .oe_sync_reset = "none";
defparam \Cout~I .operation_mode = "output";
defparam \Cout~I .output_async_reset = "none";
defparam \Cout~I .output_power_up = "low";
defparam \Cout~I .output_register_mode = "none";
defparam \Cout~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Overflow~I (
	.datain(!\Overflow~2_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Overflow));
// synopsys translate_off
defparam \Overflow~I .input_async_reset = "none";
defparam \Overflow~I .input_power_up = "low";
defparam \Overflow~I .input_register_mode = "none";
defparam \Overflow~I .input_sync_reset = "none";
defparam \Overflow~I .oe_async_reset = "none";
defparam \Overflow~I .oe_power_up = "low";
defparam \Overflow~I .oe_register_mode = "none";
defparam \Overflow~I .oe_sync_reset = "none";
defparam \Overflow~I .operation_mode = "output";
defparam \Overflow~I .output_async_reset = "none";
defparam \Overflow~I .output_power_up = "low";
defparam \Overflow~I .output_register_mode = "none";
defparam \Overflow~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Sign~I (
	.datain(\Add0~8_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Sign));
// synopsys translate_off
defparam \Sign~I .input_async_reset = "none";
defparam \Sign~I .input_power_up = "low";
defparam \Sign~I .input_register_mode = "none";
defparam \Sign~I .input_sync_reset = "none";
defparam \Sign~I .oe_async_reset = "none";
defparam \Sign~I .oe_power_up = "low";
defparam \Sign~I .oe_register_mode = "none";
defparam \Sign~I .oe_sync_reset = "none";
defparam \Sign~I .operation_mode = "output";
defparam \Sign~I .output_async_reset = "none";
defparam \Sign~I .output_power_up = "low";
defparam \Sign~I .output_register_mode = "none";
defparam \Sign~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
